import {
	CORNER_LEFT,
	CORNER_LOWER_LEFT,
	CORNER_LOWER_RIGHT, CORNER_RIGHT, CORNER_UPPER_LEFT, CORNER_UPPER_RIGHT,
	NEIGHBOR_TYPE_DOWN,
	NEIGHBOR_TYPE_LOWER_LEFT,
	NEIGHBOR_TYPE_LOWER_RIGHT, NEIGHBOR_TYPE_UP, NEIGHBOR_TYPE_UPPER_LEFT, NEIGHBOR_TYPE_UPPER_RIGHT
} from "../model/GridModel";
import {
	CONTROLS_DOWN,
	CONTROLS_LEFT,
	CONTROLS_LOWER_LEFT, CONTROLS_LOWER_RIGHT, CONTROLS_RIGHT,
	CONTROLS_UP,
	CONTROLS_UPPER_LEFT, CONTROLS_UPPER_RIGHT
} from "../model/ControlsModel";

export const FALLBACK_STOP = 0;
export const FALLBACK_FLY = 1;
export const FALLBACK_PROCEED = 2;

export const CRAWLING_MATRIX = [];

CRAWLING_MATRIX[NEIGHBOR_TYPE_DOWN] = {
	corners: [CORNER_LOWER_LEFT, CORNER_LOWER_RIGHT],
	options: []
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_DOWN].options[CONTROLS_UP] = true;
CRAWLING_MATRIX[NEIGHBOR_TYPE_DOWN].options[CONTROLS_DOWN] = false;
CRAWLING_MATRIX[NEIGHBOR_TYPE_DOWN].options[CONTROLS_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_LOWER_LEFT,
	nextNeighbor: NEIGHBOR_TYPE_LOWER_RIGHT,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_DOWN].options[CONTROLS_UPPER_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_LOWER_LEFT,
	nextNeighbor: NEIGHBOR_TYPE_LOWER_RIGHT,
	fallback: FALLBACK_FLY,
	skipMovement: true
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_DOWN].options[CONTROLS_LOWER_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_LOWER_LEFT,
	nextNeighbor: NEIGHBOR_TYPE_LOWER_RIGHT,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_DOWN].options[CONTROLS_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_LOWER_RIGHT,
	nextNeighbor: NEIGHBOR_TYPE_LOWER_LEFT,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_DOWN].options[CONTROLS_UPPER_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_LOWER_RIGHT,
	nextNeighbor: NEIGHBOR_TYPE_LOWER_LEFT,
	fallback: FALLBACK_FLY,
	skipMovement: true
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_DOWN].options[CONTROLS_LOWER_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_LOWER_RIGHT,
	nextNeighbor: NEIGHBOR_TYPE_LOWER_LEFT,
	fallback: FALLBACK_PROCEED
};

CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_LEFT] = {
	corners: [CORNER_LEFT, CORNER_LOWER_LEFT],
	options: []
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_LEFT].options[CONTROLS_UP] = {
	nextPosition: NEIGHBOR_TYPE_UPPER_LEFT,
	nextNeighbor: NEIGHBOR_TYPE_DOWN,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_LEFT].options[CONTROLS_DOWN] = {
	nextPosition: NEIGHBOR_TYPE_DOWN,
	nextNeighbor: NEIGHBOR_TYPE_UPPER_LEFT,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_LEFT].options[CONTROLS_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_UPPER_LEFT,
	nextNeighbor: NEIGHBOR_TYPE_DOWN,
	fallback: FALLBACK_STOP
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_LEFT].options[CONTROLS_UPPER_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_UPPER_LEFT,
	nextNeighbor: NEIGHBOR_TYPE_DOWN,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_LEFT].options[CONTROLS_LOWER_LEFT] = false;
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_LEFT].options[CONTROLS_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_DOWN,
	nextNeighbor: NEIGHBOR_TYPE_UPPER_LEFT,
	fallback: FALLBACK_FLY,
	skipMovement: true
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_LEFT].options[CONTROLS_UPPER_RIGHT] = true;
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_LEFT].options[CONTROLS_LOWER_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_DOWN,
	nextNeighbor: NEIGHBOR_TYPE_UPPER_LEFT,
	fallback: FALLBACK_FLY,
	skipMovement: true
};

CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_RIGHT] = {
	corners: [CORNER_LOWER_RIGHT, CORNER_RIGHT],
	options: []
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_RIGHT].options[CONTROLS_UP] = {
	nextPosition: NEIGHBOR_TYPE_UPPER_RIGHT,
	nextNeighbor: NEIGHBOR_TYPE_DOWN,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_RIGHT].options[CONTROLS_DOWN] = {
	nextPosition: NEIGHBOR_TYPE_DOWN,
	nextNeighbor: NEIGHBOR_TYPE_UPPER_RIGHT,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_RIGHT].options[CONTROLS_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_DOWN,
	nextNeighbor: NEIGHBOR_TYPE_UPPER_RIGHT,
	fallback: FALLBACK_FLY,
	skipMovement: true
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_RIGHT].options[CONTROLS_UPPER_LEFT] = true;
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_RIGHT].options[CONTROLS_LOWER_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_DOWN,
	nextNeighbor: NEIGHBOR_TYPE_UPPER_RIGHT,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_RIGHT].options[CONTROLS_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_UPPER_RIGHT,
	nextNeighbor: NEIGHBOR_TYPE_DOWN,
	fallback: FALLBACK_STOP
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_RIGHT].options[CONTROLS_UPPER_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_UPPER_RIGHT,
	nextNeighbor: NEIGHBOR_TYPE_DOWN,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_LOWER_RIGHT].options[CONTROLS_LOWER_RIGHT] = false;

CRAWLING_MATRIX[NEIGHBOR_TYPE_UP] = {
	corners: [CORNER_UPPER_LEFT, CORNER_UPPER_RIGHT],
	options: []
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UP].options[CONTROLS_UP] = false;
CRAWLING_MATRIX[NEIGHBOR_TYPE_UP].options[CONTROLS_DOWN] = true;
CRAWLING_MATRIX[NEIGHBOR_TYPE_UP].options[CONTROLS_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_UPPER_LEFT,
	nextNeighbor: NEIGHBOR_TYPE_UPPER_RIGHT,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UP].options[CONTROLS_UPPER_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_UPPER_LEFT,
	nextNeighbor: NEIGHBOR_TYPE_UPPER_RIGHT,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UP].options[CONTROLS_LOWER_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_UPPER_LEFT,
	nextNeighbor: NEIGHBOR_TYPE_UPPER_RIGHT,
	fallback: FALLBACK_FLY,
	skipMovement: true
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UP].options[CONTROLS_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_UPPER_RIGHT,
	nextNeighbor: NEIGHBOR_TYPE_UPPER_LEFT,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UP].options[CONTROLS_UPPER_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_UPPER_RIGHT,
	nextNeighbor: NEIGHBOR_TYPE_UPPER_LEFT,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UP].options[CONTROLS_LOWER_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_UPPER_RIGHT,
	nextNeighbor: NEIGHBOR_TYPE_LOWER_LEFT,
	fallback: FALLBACK_PROCEED
};

CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_LEFT] = {
	corners: [CORNER_LEFT, CORNER_UPPER_LEFT],
	options: []
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_LEFT].options[CONTROLS_UP] = {
	nextPosition: NEIGHBOR_TYPE_UP,
	nextNeighbor: NEIGHBOR_TYPE_LOWER_LEFT,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_LEFT].options[CONTROLS_DOWN] = {
	nextPosition: NEIGHBOR_TYPE_LOWER_LEFT,
	nextNeighbor: NEIGHBOR_TYPE_UP,
	fallback: FALLBACK_PROCEED,
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_LEFT].options[CONTROLS_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_LOWER_LEFT,
	nextNeighbor: NEIGHBOR_TYPE_UP,
	fallback: FALLBACK_STOP
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_LEFT].options[CONTROLS_UPPER_LEFT] = false;
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_LEFT].options[CONTROLS_LOWER_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_LOWER_LEFT,
	nextNeighbor: NEIGHBOR_TYPE_UP,
	fallback: FALLBACK_STOP
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_LEFT].options[CONTROLS_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_UP,
	nextNeighbor: NEIGHBOR_TYPE_LOWER_LEFT,
	fallback: FALLBACK_FLY,
	skipMovement: true
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_LEFT].options[CONTROLS_UPPER_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_UP,
	nextNeighbor: NEIGHBOR_TYPE_LOWER_LEFT,
	fallback: FALLBACK_FLY,
	skipMovement: true
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_LEFT].options[CONTROLS_LOWER_RIGHT] = true;

CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_RIGHT] = {
	corners: [CORNER_UPPER_RIGHT, CORNER_RIGHT],
	options: []
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_RIGHT].options[CONTROLS_UP] = {
	nextPosition: NEIGHBOR_TYPE_UP,
	nextNeighbor: NEIGHBOR_TYPE_LOWER_RIGHT,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_RIGHT].options[CONTROLS_DOWN] = {
	nextPosition: NEIGHBOR_TYPE_LOWER_RIGHT,
	nextNeighbor: NEIGHBOR_TYPE_UP,
	fallback: FALLBACK_PROCEED
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_RIGHT].options[CONTROLS_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_UP,
	nextNeighbor: NEIGHBOR_TYPE_LOWER_RIGHT,
	fallback: FALLBACK_FLY,
	skipMovement: true
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_RIGHT].options[CONTROLS_UPPER_LEFT] = {
	nextPosition: NEIGHBOR_TYPE_UP,
	nextNeighbor: NEIGHBOR_TYPE_LOWER_RIGHT,
	fallback: FALLBACK_FLY,
	skipMovement: true
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_RIGHT].options[CONTROLS_LOWER_LEFT] = true;
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_RIGHT].options[CONTROLS_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_LOWER_RIGHT,
	nextNeighbor: NEIGHBOR_TYPE_UP,
	fallback: FALLBACK_STOP
};
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_RIGHT].options[CONTROLS_UPPER_RIGHT] = false;
CRAWLING_MATRIX[NEIGHBOR_TYPE_UPPER_RIGHT].options[CONTROLS_LOWER_RIGHT] = {
	nextPosition: NEIGHBOR_TYPE_LOWER_RIGHT,
	nextNeighbor: NEIGHBOR_TYPE_UP,
	fallback: FALLBACK_STOP
};
